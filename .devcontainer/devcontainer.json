{
  "name": "Trails Development",
  "image": "mcr.microsoft.com/devcontainers/go:1-1.23-bookworm",
  
  // Features to add to the dev container
  "features": {
    "ghcr.io/devcontainers/features/docker-in-docker:2": {
      "moby": true,
      "installDockerBuildx": true
    },
    "ghcr.io/devcontainers/features/github-cli:1": {},
    "ghcr.io/devcontainers/features/git:1": {
      "ppa": true
    }
  },

  // Configure tool-specific properties
  "customizations": {
    "vscode": {
      "settings": {
        "go.toolsManagement.checkForUpdates": "local",
        "go.useLanguageServer": true,
        "go.gopath": "/go",
        "go.formatTool": "goimports",
        "go.lintTool": "golangci-lint",
        "go.lintOnSave": "workspace",
        "[go]": {
          "editor.formatOnSave": true,
          "editor.codeActionsOnSave": {
            "source.organizeImports": "explicit"
          }
        },
        "terminal.integrated.defaultProfile.linux": "bash"
      },
      "extensions": [
        "golang.go",
        "ms-azuretools.vscode-docker",
        "ms-vscode.makefile-tools",
        "eamodio.gitlens",
        "github.copilot",
        "github.copilot-chat",
        "streetsidesoftware.code-spell-checker"
      ]
    }
  },

  // Use 'forwardPorts' to make a list of ports inside the container available locally
  "forwardPorts": [],

  // Use 'postCreateCommand' to run commands after the container is created
  "postCreateCommand": "go mod download && go install github.com/golangci/golangci-lint/cmd/golangci-lint@latest && go install github.com/cosmtrek/air@latest",

  // Use 'postStartCommand' to run commands each time the container starts
  "postStartCommand": "git config --global --add safe.directory ${containerWorkspaceFolder}",

  // Set environment variables
  "containerEnv": {
    "CGO_ENABLED": "0",
    "GOOS": "linux",
    "GOARCH": "amd64"
  },

  // Mounts
  "mounts": [
    "source=/var/run/docker.sock,target=/var/run/docker.sock,type=bind"
  ],

  // Run as non-root user
  "remoteUser": "vscode",

  // Features
  "runArgs": [
    "--cap-add=SYS_PTRACE",
    "--security-opt",
    "seccomp=unconfined"
  ]
}